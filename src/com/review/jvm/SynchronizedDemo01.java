package com.review.jvm;


/**
 * 关于synchronized的描述：它是java中实现同步的一种方式。
 *
 * 线程的互斥，导致了变量的同步。
 * 同步：多个线程的情况下，同一时刻只能有一个线程访问共享变量
 *
 * Java语言中的线程安全：
 * 1，不可变    安全
 * 2，绝对安全
 * 3，相对安全
 * 4，线程兼容
 * 5，线程对立
 *
 * Java中线程安全的实现方法：
 * 1，互斥同步（阻塞同步）
 * synchronized：
 *  块结构的同步语法。可以实现线程阻塞的访问共享变量
 *  从字节码上来看：是通过monitorenter 和 monitorexit这两个字节码指令来实现的
 *  必须要作用在一个实例对象上。也就在对中的对象头中通过计数的方法
 *      如果明确制定了对象：锁的就是当前这个对象
 *      如果没有明确指定锁的对象：
 *          作用在实例方法是锁当前this对象
 *          作用在类方法上是锁当前Class对象实例
 *
 *   synchronized作用的过程：
 *   1，字节码执行到monitorenter指令时，它会尝试去获取折合对象的锁
 *   2，如果获取到这个对象的锁，就会给锁计数器加一
 *   3，如果没有获取到，就等待获取（可能会将线程挂起，由用户态转换为内核态，也可能自旋等待）
 *   4，指向monitorexit时， 释放锁对象就会将锁计数器减一。直到为0后完全释放锁对象
 *
 *
 *
 * ReentrantLock
 *
 * 2，非阻塞同步
 *
 *
 *
 */
public class SynchronizedDemo01 {



}
